"""
Django settings for platzigram project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

#Esta linea declara el lugar donde se esta corriendo el proyecto 
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

#Esta llave se usa para los has de seguridad cuando sea necesario
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3i^-==2o(7nk9whstgwo8(5m12)=+_g7ad52y*yp*3p8&u8xn*'

#Debug marca si el proyecto esta en desarrollo o debugging
#Debe mantenerse en False cada que el proyecto sea liberado a producción
#Cuando esta encendido, enviar información adicional del proyecto al servidor
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#Determina cuales son los hosts que están permitidos para interactuar con el proyecto
ALLOWED_HOSTS = []


#A continuación están las aplicaciones ligadas al proyecto de django
#Django instala algunas por defecto
# Application definition

INSTALLED_APPS = [
    #Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #Local apps
    'posts',
    'users',
]

#Parecido al anterior
#Django instala algunas por defecto
#Es una lista porque para los middlewares el orden es importante
MIDDLEWARE = [
    #Django
    #Este se encarga de comprobar las medidas de seguridad
    'django.middleware.security.SecurityMiddleware',
    #El siguiente se encarga de validad la sessión del usuario
    'django.contrib.sessions.middleware.SessionMiddleware',
    #Se encarga debug y otras cosas
    'django.middleware.common.CommonMiddleware',
    #Se encarga de validación
    'django.middleware.csrf.CsrfViewMiddleware',
    #Agregar anonimos en las vistas
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #Crear mensajes
    'django.contrib.messages.middleware.MessageMiddleware',
    #Seguridad
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #Local
    'platzigram.middleware.ProfileCompletionMiddleware',
]

#Ahora se define el modulo de entradas de urls. En este caso estan dentro de la carpeta platzi. Ej: platzigram.urls
ROOT_URLCONF = 'platzigram.urls'

#Algunos modelos por defecto
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #Incluye la ubicación de todos los templates usados
        #En este caso, la ubicación el folder actual (BASE_DIR) en la carpteta templates
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        #Habilitar que el "render" busque templates en los directorios de las apps
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#El archivo por defecto de wsgi
WSGI_APPLICATION = 'platzigram.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

#Inicio de base de datos
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        #Define la ubicación de la base de datos
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

#Ahora, son validaciones de contraseña en el caso de que se este usando la aplicacion 'django.contrib.auth'
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

#Definir lenguaje del código
LANGUAGE_CODE = 'en-us'

#Definir zona horaria
TIME_ZONE = 'UTC'

#Adicionales
USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
#Revisar documentación para toda la información
#Definir que cuando se escriba static/ se ejecuta esta modulo y no la url predefinida
STATIC_URL = '/static/'


#Definir la ubicación de los archivos static
STATICFILES_DIRS=[
    BASE_DIR / 'static'
]

#Definir los métodos de busqueda usados para encontrar los archivos static
STATICFILES_FINDERS=[
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]
#Colocar ubicación del archivo de imagenes
#Se podría colocar la ubicación de archivo en mi computador pero no es lo deseable 
# por qué no es escalable para el siguiente desarrollador que use la base de datos
#Así que se usa nomenclatura:
#BASE_DIR -> Capeta actual donde esta el proyecto platzigram
#Se puede colocar cualquier nombre al archivo (media)
#Si se va a usar git, usar .gitignore para ignorar media
MEDIA_ROOT = BASE_DIR / 'media'
#Es el path donde va a estar ubicado las imagenes
MEDIA_URL='/media/'

#Establecer la ubicación de la estructura del login
LOGIN_URL= "/users/login"
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

#Necesario para la clase de views (login) en users. Cuando el usuario hace login, es dirigido automaticamente a esta url
#En este caso, cuando haga login va ir a los feed
LOGIN_REDIRECT_URL = "/"

#Necesario para la clase de views (logout) en users. Cuando el usuario hace logout, es dirigido automaticamente a esta url
#En este caso, cuando haga logout va ir a el login es el mismo LOGIN_URL
LOGOUT_REDIRECT_URL = LOGIN_URL

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
